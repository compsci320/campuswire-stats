{"ast":null,"code":"var _jsxFileName = \"/Users/liamgates/Desktop/campuswire-stats/campuswire-stats/client/src/components/trendbar/trendbar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './trendbar.css';\nimport TrendOption from '../trend-option/trend-option';\nimport mock_data from '../../mock/mock.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst trendingTopics = [{\n  name: \"Homework\"\n}, {\n  name: \"Projects\"\n}, {\n  name: \"Attendance\"\n}];\nfunction Trendbar() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:5001/${mock_data}`).then(res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    }).catch(err => console.error(err));\n  });\n  if (data === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  let wordList = data[\"words\"];\n  const options = wordList.map((elem, idx) => /*#__PURE__*/_jsxDEV(TrendOption, {\n    name: elem.name\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 47\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trendbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trendbar-title\",\n      children: \"Trending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trendbar-options\",\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Trendbar, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Trendbar;\nexport default Trendbar;\nvar _c;\n$RefreshReg$(_c, \"Trendbar\");","map":{"version":3,"names":["React","useState","useEffect","TrendOption","mock_data","jsxDEV","_jsxDEV","trendingTopics","name","Trendbar","_s","data","setData","fetch","then","res","json","console","log","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","wordList","options","map","elem","idx","className","_c","$RefreshReg$"],"sources":["/Users/liamgates/Desktop/campuswire-stats/campuswire-stats/client/src/components/trendbar/trendbar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './trendbar.css';\nimport TrendOption from '../trend-option/trend-option';\nimport mock_data from '../../mock/mock.json';\n\nconst trendingTopics = [\n  { name: \"Homework\" },\n  { name: \"Projects\" },\n  { name: \"Attendance\" },\n]\n\nfunction Trendbar() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(`http://localhost:5001/${mock_data}`).then(res => res.json()).then(data => { setData(data); console.log(data); }).catch(err => console.error(err));\n\n  });\n  if (data === null) {\n    return <p>Loading...</p>;\n  }\n  let wordList = data[\"words\"] as string[];\n  const options = wordList.map((elem, idx) => <TrendOption key={idx} name={elem.name} />);\n  return (\n    <div className=\"trendbar\">\n      <div className=\"trendbar-title\">Trending</div>\n      <div className=\"trendbar-options\">{options}</div>\n    </div>\n  );\n}\n\nexport default Trendbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,SAAS,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAG,CACrB;EAAEC,IAAI,EAAE;AAAW,CAAC,EACpB;EAAEA,IAAI,EAAE;AAAW,CAAC,EACpB;EAAEA,IAAI,EAAE;AAAa,CAAC,CACvB;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAE,yBAAwBT,SAAU,EAAC,CAAC,CAACU,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACH,IAAI,IAAI;MAAEC,OAAO,CAACD,IAAI,CAAC;MAAEM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IAAE,CAAC,CAAC,CAACQ,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EAE1J,CAAC,CAAC;EACF,IAAIT,IAAI,KAAK,IAAI,EAAE;IACjB,oBAAOL,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EACA,IAAIC,QAAQ,GAAGhB,IAAI,CAAC,OAAO,CAAa;EACxC,MAAMiB,OAAO,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAAKzB,OAAA,CAACH,WAAW;IAAWK,IAAI,EAAEsB,IAAI,CAACtB;EAAK,GAArBuB,GAAG;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAoB,CAAC,CAAC;EACvF,oBACEpB,OAAA;IAAK0B,SAAS,EAAC,UAAU;IAAAV,QAAA,gBACvBhB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAV,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9CpB,OAAA;MAAK0B,SAAS,EAAC,kBAAkB;MAAAV,QAAA,EAAEM;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAChB,EAAA,CAlBQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAoBjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}