{"ast":null,"code":"var _jsxFileName = \"/Users/liamgates/Desktop/campuswire-stats/campuswire-stats/client/src/components/trendbar/trendbar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './trendbar.css';\nimport TrendOption from '../trend-option/trend-option';\nimport mock_data from '../../mock/mock.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass APIService {\n  // Insert an article\n  static InsertArticle(body) {\n    return fetch(`http://localhost:5000/add`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json()).catch(error => console.log(error));\n  }\n}\nfunction Trendbar() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:5001/get_data', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(mock_data)\n    }).then(res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    }).catch(err => console.error(err));\n  });\n  if (data === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  let wordList = data[\"words\"];\n  const options = wordList.map((elem, idx) => /*#__PURE__*/_jsxDEV(TrendOption, {\n    name: elem\n  }, idx, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 47\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trendbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trendbar-title\",\n      children: \"Trending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trendbar-options\",\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Trendbar, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Trendbar;\nexport default Trendbar;\nvar _c;\n$RefreshReg$(_c, \"Trendbar\");","map":{"version":3,"names":["React","useState","useEffect","TrendOption","mock_data","jsxDEV","_jsxDEV","APIService","InsertArticle","body","fetch","headers","JSON","stringify","then","response","json","catch","error","console","log","Trendbar","_s","data","setData","method","res","err","children","fileName","_jsxFileName","lineNumber","columnNumber","wordList","options","map","elem","idx","name","className","_c","$RefreshReg$"],"sources":["/Users/liamgates/Desktop/campuswire-stats/campuswire-stats/client/src/components/trendbar/trendbar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './trendbar.css';\nimport TrendOption from '../trend-option/trend-option';\nimport mock_data from '../../mock/mock.json';\n\nclass APIService {\n  // Insert an article\n  static InsertArticle(body: any) {\n    return fetch(`http://localhost:5000/add`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(response => response.json())\n      .catch(error => console.log(error))\n  }\n\n}\n\nfunction Trendbar() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:5001/get_data', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(mock_data)\n    }).then(res => res.json()).then(data => { setData(data); console.log(data); }).catch(err => console.error(err));\n\n  });\n  if (data === null) {\n    return <p>Loading...</p>;\n  }\n  let wordList = data[\"words\"] as string[];\n  const options = wordList.map((elem, idx) => <TrendOption key={idx} name={elem} />);\n  return (\n    <div className=\"trendbar\">\n      <div className=\"trendbar-title\">Trending</div>\n      <div className=\"trendbar-options\">{options}</div>\n    </div>\n  );\n}\n\nexport default Trendbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,SAAS,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,CAAC;EACf;EACA,OAAOC,aAAaA,CAACC,IAAS,EAAE;IAC9B,OAAOC,KAAK,CAAE,2BAA0B,EAAE;MACxC,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC,CACCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC;AAEF;AAEA,SAASG,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,gCAAgC,EAAE;MACtCe,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACT,SAAS;IAChC,CAAC,CAAC,CAACU,IAAI,CAACY,GAAG,IAAIA,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACS,IAAI,IAAI;MAAEC,OAAO,CAACD,IAAI,CAAC;MAAEJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;IAAE,CAAC,CAAC,CAACN,KAAK,CAACU,GAAG,IAAIR,OAAO,CAACD,KAAK,CAACS,GAAG,CAAC,CAAC;EAEjH,CAAC,CAAC;EACF,IAAIJ,IAAI,KAAK,IAAI,EAAE;IACjB,oBAAOjB,OAAA;MAAAsB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EACA,IAAIC,QAAQ,GAAGV,IAAI,CAAC,OAAO,CAAa;EACxC,MAAMW,OAAO,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAAK/B,OAAA,CAACH,WAAW;IAAWmC,IAAI,EAAEF;EAAK,GAAhBC,GAAG;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAAC,CAAC;EAClF,oBACE1B,OAAA;IAAKiC,SAAS,EAAC,UAAU;IAAAX,QAAA,gBACvBtB,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAX,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9C1B,OAAA;MAAKiC,SAAS,EAAC,kBAAkB;MAAAX,QAAA,EAAEM;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACV,EAAA,CAxBQD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}